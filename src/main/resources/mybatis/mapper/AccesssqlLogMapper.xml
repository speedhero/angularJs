<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinosoft.core.mapper.AccesssqlLogMapper" >
  <resultMap id="BaseResultMap" type="AccesssqlLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="log_date" property="logDate" jdbcType="TIMESTAMP" />
    <result column="executive_result" property="executiveResult" jdbcType="INTEGER" />
    <result column="run_time" property="runTime" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="sql_text" property="sqlText" jdbcType="LONGVARCHAR" />
    <result column="err_text" property="errText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, log_date, executive_result, run_time, level, sql_text, err_text
  </sql>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from accesssql_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="customSelect" parameterType="map" resultType="hashmap">
    select ${outColumns} from accesssql_log where ${keyColumn} = #{keyValue} limit 1
  </select>
  <insert id="save" parameterType="AccesssqlLog" useGeneratedKeys="true" keyProperty="id"  keyColumn="id">
    insert into accesssql_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="executiveResult != null" >
        executive_result,
      </if>
      <if test="runTime != null" >
        run_time,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="sqlText != null" >
        sql_text,
      </if>
      <if test="errText != null" >
        err_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="executiveResult != null" >
        #{executiveResult,jdbcType=INTEGER},
      </if>
      <if test="runTime != null" >
        #{runTime,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="sqlText != null" >
        #{sqlText,jdbcType=LONGVARCHAR},
      </if>
      <if test="errText != null" >
        #{errText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
    <selectKey keyProperty="id" resultType="long" order="AFTER">  
    	SELECT LAST_INSERT_ID();  
    </selectKey>
  </insert>
  <update id="update" parameterType="AccesssqlLog" >
    update accesssql_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="executiveResult != null" >
        executive_result = #{executiveResult,jdbcType=INTEGER},
      </if>
      <if test="runTime != null" >
        run_time = #{runTime,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="sqlText != null" >
        sql_text = #{sqlText,jdbcType=LONGVARCHAR},
      </if>
      <if test="errText != null" >
        err_text = #{errText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="saveBatch" parameterType="java.util.List">
    insert into accesssql_log (user_id, sql_text, executive_result, run_time, err_text, level) values
    <foreach collection="list" item="item" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <choose>
          <when test="item.userId == null">0,</when>
          <otherwise>#{item.userId},</otherwise>
        </choose>
        <choose>
          <when test="item.sqlText == null">'',</when>
          <otherwise>#{item.sqlText},</otherwise>
        </choose>
        <choose>
          <when test="item.executiveResult == null">0,</when>
          <otherwise>#{item.executiveResult},</otherwise>
        </choose>
        <choose>
          <when test="item.runTime == null">0,</when>
          <otherwise>#{item.runTime},</otherwise>
        </choose>
        <choose>
          <when test="item.errText == null">'',</when>
          <otherwise>#{item.errText},</otherwise>
        </choose>
        <choose>
          <when test="item.level == null">0,</when>
          <otherwise>#{item.level},</otherwise>
        </choose>
      </trim>
    </foreach>
  </insert>
</mapper>